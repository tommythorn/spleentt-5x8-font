use argh::FromArgs;
use minifb::{Key, Scale, ScaleMode, Window, WindowOptions};
use std::io::prelude::*;

const MARGIN: usize = 4;
const SCALE: usize = 2;

const BACKGROUND: u32 = 19 << 16 | 119 << 8 | 61;
const FOREGROUND: u32 = 255 << 16 | 240 << 8 | 165;

const VT100BITMAP: [u8; 128 * 16] = [
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, // 0x00000000 ................
    0x10, 0x38, 0x7C, 0xFE, 0x7C, 0x38, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, // 0x00000010 .8|.|8..........
    0x92, 0x44, 0x92, 0x44, 0x92, 0x44, 0x92, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, // 0x00000020 .D.D.D..........
    0x88, 0x88, 0xF8, 0x88, 0x88, 0x3E, 0x08, 0x08, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, // 0x00000030 ................
    0xF0, 0x80, 0xE0, 0x80, 0x9E, 0x10, 0x1C, 0x10, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, // 0x00000040 ................
    0x78, 0x80, 0x80, 0x78, 0x3C, 0x22, 0x3C, 0x22, 0x22, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, // 0x00000050 x..x."."".......
    0x80, 0x80, 0x80, 0xF8, 0x3E, 0x20, 0x3C, 0x20, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, // 0x00000060 ..... .  .......
    0x38, 0x44, 0x44, 0x38, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, // 0x00000070 8DD8............
    0x00, 0x10, 0x10, 0xFE, 0x10, 0x10, 0xFE, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, // 0x00000080 ................
    0x88, 0xC8, 0xA8, 0x98, 0x88, 0x20, 0x20, 0x20, 0x3E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, // 0x00000090 .....   ........
    0x88, 0x88, 0x50, 0x20, 0x3E, 0x08, 0x08, 0x08, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, // 0x000000A0 ..P ............
    0x10, 0x10, 0x10, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x10, // 0x000000B0 ................
    0x00, 0x00, 0x00, 0xF0, 0x10, 0x10, 0x10, 0x10, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, // 0x000000C0 ................
    0x00, 0x00, 0x00, 0x1F, 0x10, 0x10, 0x10, 0x10, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, // 0x000000D0 ................
    0x10, 0x10, 0x10, 0x1F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x10, // 0x000000E0 ................
    0x10, 0x10, 0x10, 0xFF, 0x10, 0x10, 0x10, 0x10, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x10, // 0x000000F0 ................
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0xFF, // 0x00000100 ................
    0x00, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, // 0x00000110 ................
    0x00, 0x00, 0x00, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, // 0x00000120 ................
    0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, // 0x00000130 ................
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, // 0x00000140 ................
    0x10, 0x10, 0x10, 0x1F, 0x10, 0x10, 0x10, 0x10, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x10, // 0x00000150 ................
    0x10, 0x10, 0x10, 0xF0, 0x10, 0x10, 0x10, 0x10, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x10, // 0x00000160 ................
    0x10, 0x10, 0x10, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x10, // 0x00000170 ................
    0x00, 0x00, 0x00, 0xFF, 0x10, 0x10, 0x10, 0x10, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, // 0x00000180 ................
    0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x10, // 0x00000190 ................
    0x02, 0x08, 0x20, 0x80, 0x20, 0x08, 0x02, 0xFE, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, // 0x000001A0 .. . ...........
    0x80, 0x20, 0x08, 0x02, 0x08, 0x20, 0x80, 0xFE, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, // 0x000001B0 . ... ..........
    0x00, 0x00, 0xFE, 0x24, 0x24, 0x24, 0x44, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, // 0x000001C0 ...$$$D.........
    0x02, 0x04, 0xFE, 0x10, 0xFE, 0x40, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, // 0x000001D0 .....@..........
    0x1C, 0x22, 0x20, 0xF8, 0x20, 0x78, 0xA6, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, // 0x000001E0 ." . x.@........
    0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, // 0x000001F0 ................
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, // 0x00000200 ................
    0x10, 0x10, 0x10, 0x10, 0x10, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, // 0x00000210 ................
    0x24, 0x24, 0x24, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, // 0x00000220 $$$.............
    0x48, 0x48, 0xFC, 0x48, 0xFC, 0x48, 0x48, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, // 0x00000230 HH.H.HH.........
    0x10, 0x7C, 0x90, 0x7C, 0x12, 0x7C, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, // 0x00000240 .|.|.|..........
    0xC2, 0xC4, 0x08, 0x10, 0x20, 0x46, 0x86, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, // 0x00000250 .... F..........
    0x70, 0x88, 0x88, 0x70, 0x8A, 0x84, 0x7A, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, // 0x00000260 p..p..z.........
    0x18, 0x10, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, // 0x00000270 .. .............
    0x08, 0x10, 0x20, 0x20, 0x20, 0x10, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, // 0x00000280 ..   ...........
    0x20, 0x10, 0x08, 0x08, 0x08, 0x10, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, // 0x00000290  ..... .........
    0x00, 0x44, 0x28, 0xFE, 0x28, 0x44, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, // 0x000002A0 .D(.(D..........
    0x00, 0x10, 0x10, 0xFE, 0x10, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, // 0x000002B0 ................
    0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0x20, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, // 0x000002C0 .....0 @........
    0x00, 0x00, 0x00, 0xFE, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, // 0x000002D0 ................
    0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, // 0x000002E0 .....00.........
    0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, // 0x000002F0 .... @..........
    0x38, 0x44, 0x82, 0x82, 0x82, 0x44, 0x38, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, // 0x00000300 8D...D8.........
    0x10, 0x30, 0x50, 0x10, 0x10, 0x10, 0x7C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, // 0x00000310 .0P...|.........
    0x78, 0x84, 0x02, 0x1C, 0x60, 0x80, 0xFE, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, // 0x00000320 x...`...........
    0xFE, 0x04, 0x08, 0x1C, 0x02, 0x82, 0x7C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, // 0x00000330 ......|.........
    0x08, 0x18, 0x28, 0x48, 0xFE, 0x08, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, // 0x00000340 ..(H............
    0xFE, 0x80, 0xBC, 0xC2, 0x02, 0x82, 0x7C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, // 0x00000350 ......|.........
    0x3C, 0x42, 0x80, 0xBC, 0xC2, 0x42, 0x3C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, // 0x00000360 .B...B..........
    0xFE, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, // 0x00000370 ..... @.........
    0x7C, 0x82, 0x82, 0x7C, 0x82, 0x82, 0x7C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, // 0x00000380 |..|..|.........
    0x78, 0x84, 0x86, 0x7A, 0x02, 0x84, 0x78, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, // 0x00000390 x..z..x.........
    0x00, 0x30, 0x30, 0x00, 0x00, 0x30, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, // 0x000003A0 .00..00.........
    0x00, 0x30, 0x30, 0x00, 0x00, 0x30, 0x20, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, // 0x000003B0 .00..0 @........
    0x02, 0x08, 0x20, 0x80, 0x20, 0x08, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, // 0x000003C0 .. . ...........
    0x00, 0x00, 0xFE, 0x00, 0xFE, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, // 0x000003D0 ................
    0x80, 0x20, 0x08, 0x02, 0x08, 0x20, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, // 0x000003E0 . ... ..........
    0x7C, 0x82, 0x0C, 0x10, 0x10, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, // 0x000003F0 |...............
    0x7C, 0x82, 0x8A, 0x92, 0x9C, 0x80, 0x7C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, // 0x00000400 |.....|.........
    0x10, 0x28, 0x44, 0x82, 0xFE, 0x82, 0x82, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, // 0x00000410 .(D.............
    0xFC, 0x42, 0x42, 0x7C, 0x42, 0x42, 0xFC, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, // 0x00000420 .BB|BB..........
    0x3C, 0x42, 0x80, 0x80, 0x80, 0x42, 0x3C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, // 0x00000430 .B...B..........
    0xF8, 0x44, 0x42, 0x42, 0x42, 0x44, 0xF8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, // 0x00000440 .DBBBD..........
    0xFE, 0x80, 0x80, 0xF8, 0x80, 0x80, 0xFE, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, // 0x00000450 ................
    0xFE, 0x80, 0x80, 0xF8, 0x80, 0x80, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, // 0x00000460 ................
    0x3C, 0x42, 0x80, 0x80, 0x8E, 0x42, 0x3C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, // 0x00000470 .B...B..........
    0x82, 0x82, 0x82, 0xFE, 0x82, 0x82, 0x82, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, // 0x00000480 ................
    0x7C, 0x10, 0x10, 0x10, 0x10, 0x10, 0x7C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, // 0x00000490 |.....|.........
    0x0E, 0x04, 0x04, 0x04, 0x04, 0x84, 0x78, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, // 0x000004A0 ......x.........
    0x82, 0x8C, 0xB0, 0xC0, 0xB0, 0x8C, 0x82, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, // 0x000004B0 ................
    0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0xFE, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, // 0x000004C0 ................
    0x82, 0xC6, 0xAA, 0x92, 0x82, 0x82, 0x82, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, // 0x000004D0 ................
    0x82, 0xC2, 0xA2, 0x92, 0x8A, 0x86, 0x82, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, // 0x000004E0 ................
    0x7C, 0x82, 0x82, 0x82, 0x82, 0x82, 0x7C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, // 0x000004F0 |.....|.........
    0xFC, 0x82, 0x82, 0xFC, 0x80, 0x80, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, // 0x00000500 ................
    0x7C, 0x82, 0x82, 0x82, 0x8A, 0x84, 0x7A, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, // 0x00000510 |.....z.........
    0xFC, 0x82, 0x82, 0xFC, 0x88, 0x84, 0x82, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, // 0x00000520 ................
    0x7C, 0x82, 0x80, 0x7C, 0x02, 0x82, 0x7C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, // 0x00000530 |..|..|.........
    0xFE, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, // 0x00000540 ................
    0x82, 0x82, 0x82, 0x82, 0x82, 0x82, 0x7C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, // 0x00000550 ......|.........
    0x82, 0x82, 0x44, 0x44, 0x28, 0x28, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, // 0x00000560 ..DD((..........
    0x82, 0x82, 0x82, 0x92, 0x92, 0xAA, 0x44, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, // 0x00000570 ......D.........
    0x82, 0x44, 0x28, 0x10, 0x28, 0x44, 0x82, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, // 0x00000580 .D(.(D..........
    0x82, 0x44, 0x28, 0x10, 0x10, 0x10, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, // 0x00000590 .D(.............
    0xFE, 0x04, 0x08, 0x10, 0x20, 0x40, 0xFE, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, // 0x000005A0 .... @..........
    0x3C, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, // 0x000005B0 .     ..........
    0x80, 0x40, 0x20, 0x10, 0x08, 0x04, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, // 0x000005C0 .@ .............
    0x78, 0x08, 0x08, 0x08, 0x08, 0x08, 0x78, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, // 0x000005D0 x.....x.........
    0x10, 0x28, 0x44, 0x82, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, // 0x000005E0 .(D.............
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFE, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, // 0x000005F0 ................
    0x30, 0x10, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, // 0x00000600 0...............
    0x00, 0x00, 0x7C, 0x02, 0x7E, 0x82, 0x7E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, // 0x00000610 ..|.~.~.........
    0x80, 0x80, 0xBC, 0xC2, 0x82, 0xC2, 0xBC, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, // 0x00000620 ................
    0x00, 0x00, 0x3C, 0x42, 0x80, 0x40, 0x3E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, // 0x00000630 ...B.@..........
    0x02, 0x02, 0x7A, 0x86, 0x82, 0x86, 0x7A, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, // 0x00000640 ..z...z.........
    0x00, 0x00, 0x7C, 0x82, 0xFE, 0x80, 0x7C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, // 0x00000650 ..|...|.........
    0x1C, 0x22, 0x20, 0xF8, 0x20, 0x20, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, // 0x00000660 ." .   .........
    0x00, 0x02, 0x7A, 0x84, 0x84, 0x7C, 0x04, 0x84, 0x78, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, // 0x00000670 ..z..|..x.......
    0x80, 0x80, 0xBC, 0xC2, 0x82, 0x82, 0x82, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, // 0x00000680 ................
    0x10, 0x00, 0x30, 0x10, 0x10, 0x10, 0x7C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, // 0x00000690 ..0...|.........
    0x04, 0x00, 0x04, 0x04, 0x04, 0x04, 0x84, 0x84, 0x78, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, // 0x000006A0 ........x.......
    0x80, 0x80, 0x88, 0x90, 0xE0, 0x88, 0x82, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, // 0x000006B0 ................
    0x30, 0x10, 0x10, 0x10, 0x10, 0x10, 0x38, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, // 0x000006C0 0.....8.........
    0x00, 0x00, 0xC4, 0xAA, 0x92, 0x92, 0x82, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, // 0x000006D0 ................
    0x00, 0x00, 0xBC, 0xC2, 0x82, 0x82, 0x82, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, // 0x000006E0 ................
    0x00, 0x00, 0x7C, 0x82, 0x82, 0x82, 0x7C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, // 0x000006F0 ..|...|.........
    0x00, 0x00, 0xBC, 0xC2, 0xC2, 0xBC, 0x80, 0x80, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, // 0x00000700 ................
    0x00, 0x00, 0x7A, 0x86, 0x86, 0x7A, 0x02, 0x02, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, // 0x00000710 ..z..z..........
    0x00, 0x00, 0x9C, 0x62, 0x40, 0x40, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, // 0x00000720 ...b@@@.........
    0x00, 0x00, 0x7C, 0x80, 0x7C, 0x02, 0xFC, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, // 0x00000730 ..|.|...........
    0x20, 0x20, 0xF8, 0x20, 0x20, 0x24, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, // 0x00000740   .  $..........
    0x00, 0x00, 0x84, 0x84, 0x84, 0x84, 0x7A, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, // 0x00000750 ......z.........
    0x00, 0x00, 0x82, 0x82, 0x44, 0x28, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, // 0x00000760 ....D(..........
    0x00, 0x00, 0x82, 0x82, 0x92, 0xAA, 0x44, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, // 0x00000770 ......D.........
    0x00, 0x00, 0x84, 0x48, 0x30, 0x48, 0x84, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, // 0x00000780 ...H0H..........
    0x00, 0x00, 0x84, 0x84, 0x8C, 0x74, 0x04, 0x84, 0x78, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, // 0x00000790 .....t..x.......
    0x00, 0x00, 0xFE, 0x04, 0x18, 0x20, 0xFE, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, // 0x000007A0 ..... ..........
    0x0E, 0x10, 0x10, 0x60, 0x10, 0x10, 0x0E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, // 0x000007B0 ...`............
    0x10, 0x10, 0x10, 0x00, 0x00, 0x10, 0x10, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, // 0x000007C0 ................
    0xE0, 0x10, 0x10, 0x0C, 0x10, 0x10, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, // 0x000007D0 ................
    0x62, 0x92, 0x8C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, // 0x000007E0 b...............
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
]; // 0x000007F0 ................

#[derive(FromArgs)]
/// Demo the font
struct Config {
    /// give the path to the font
    #[argh(option, default = "String::from(\"../SpleenttMedium-8.bdf\")")]
    font: String,

    /// if given, dump a screenshot here in PPM format
    #[argh(option)]
    screendump: Option<String>,

    /// show the default sample
    #[argh(switch, short = 'd')]
    default: bool,

    /// arguments
    #[argh(positional, greedy)]
    text: Vec<String>,
}

struct Context {
    window: Window,
    font: bdf::Font,
    width: usize,
    height: usize,
    scale: usize,
    cursor: (usize, usize),
    fb: Vec<u32>,
}

impl Context {
    fn new(font: bdf::Font, width: usize, height: usize) -> anyhow::Result<Context> {
        let mut window = Window::new(
            "spleentt - hit Escape to exit",
            width,
            height,
            WindowOptions {
                resize: true,
                scale: Scale::X2,
                scale_mode: ScaleMode::AspectRatioStretch,
                ..WindowOptions::default()
            },
        )
        .expect("Unable to Open Window");

        // Limit to max ~60 fps update rate
        window.limit_update_rate(Some(std::time::Duration::from_micros(16600)));

        Ok(Context {
            window,
            width,
            height,
            font,
            cursor: (MARGIN, MARGIN),
            scale: SCALE,
            fb: vec![BACKGROUND; width * height],
        })
    }

    fn renderline(&mut self, s: &str) {
        // let default = self.font.glyphs().get(&'?').unwrap();

        for y in 0..10 {
            for c in s.chars() {
                for x in 0..10 {
                    if x < 8 && VT100BITMAP[(c as usize) * 16 + y] & (128 >> x) != 0 {
                        self.fb[self.cursor.0 + self.cursor.1 * self.width] = FOREGROUND;
                    }
                    self.cursor.0 += 1;
                }
            }
            self.cursor.0 = MARGIN;
            self.cursor.1 += 1;
        }
    }

    fn dump(&mut self, file: &str) -> Result<(), anyhow::Error> {
        let mut f = std::fs::File::create(file)?;
        writeln!(f, "P6")?;
        writeln!(
            f,
            "{} {}",
            self.width * self.scale,
            self.height * self.scale
        )?;
        writeln!(f, "255")?;
        for y in 0..self.height * self.scale {
            for x in 0..self.width * self.scale {
                let c = self.fb[(y / self.scale) * self.width + (x / self.scale)];
                // XXX I don't understand the color mess up here
                if c == BACKGROUND {
                    f.write_all(&[0x37, 0x75, 0x43])?;
                } else {
                    f.write_all(&[0xfc, 0xf0, 0xae])?;
                }
            }
        }

        Ok(())
    }

    fn present(&mut self) {
        while self.window.is_open() && !self.window.is_key_down(Key::Escape) {
            self.window
                .update_with_buffer(&self.fb, self.width, self.height)
                .unwrap();
        }
    }
}

fn main() -> anyhow::Result<()> {
    let cfg: Config = argh::from_env();
    let font = bdf::open(cfg.font).unwrap(); // XXX propagate error
    let lines = if cfg.default {
        "Hello World!\n\
		illegal1 = 0Oo\n\
		ABCDEFGHIJKLMNOPQRSTUVWXYZ\n\
		abcdefghijklmnopqrstuvwxyz\n\
		0123456789 () {} [] <> @ $\n\
		~ # % ^ & * - = + / ? : ; _ |\n\
		the quick brown fox jumps over the lazy dog.\n\
		\n\
		 !\"#$%&'()*+,-./\n\
		0123456789:;<=>?\n\
		@ABCDEFGHIJKLMNO\n\
		PQRSTUVWXYZ[\\]^_\n\
		`abcdefghijklmno\n\
		pqrstuvwxyz{|}~\n\
		\n\
		#define F() (a && b || !c == y^z ? 42 : 12)\n\
		$a % ($b * $c) ok? YMCA a[42]-A[43] {~c; y}\n\
		<A>\n\
		(A)\n\
		[A]\n\
		oO08 iIlL1\n\
		g9qCGQ ~-+=>\n\
		({[<>]})\n\
		{A} */ THE END."
            .lines()
            .map(|r| r.to_string())
            .collect()
    } else {
        cfg.text
    };

    let height = lines.len() * 10 + MARGIN * 2;
    let width = lines.iter().map(|x| x.len()).max().unwrap_or(0) * 10 + MARGIN * 2;

    let mut context = Context::new(font, width, height)?;

    for line in lines {
        context.renderline(&line);
    }

    context.present();

    if let Some(file) = cfg.screendump {
        context.dump(&file)?;
    }

    Ok(())
}
